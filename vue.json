{
  "$schema": "https://json.schemastore.org/eslintrc.json",

  "overrides": [
    {
      "files": ["*.vue", "*.js", "*.jsx", "*.ts", "*.tsx"],

      "extends": [
        "plugin:vuejs-accessibility/recommended",
        "plugin:vue/vue3-essential"
      ],

      "plugins": ["import", "@typescript-eslint", "sonar"],

      "parser": "vue-eslint-parser",
      "parserOptions": {
        "parser": "@typescript-eslint/parser",
        "ecmaVersion": "latest",
        "extraFileExtensions": [".vue"]
      },

      "rules": {
        "vue/block-order": [
          "error",
          { "order": [
            "script", "template", "style"
          ] }
        ],
        "vue/no-lone-template": "error",
        "vue/no-multiple-slot-args": "error",
        "vue/no-v-html": "error",
        "vue/order-in-components": "error",
        "vue/this-in-template": "error",
        "vue/attribute-hyphenation": [
          "error", "never"
        ],
        "vue/component-definition-name-casing": "error",
        "vue/first-attribute-linebreak": "error",
        "vue/no-template-shadow": "error",
        "vue/one-component-per-file": "error",
        "vue/prop-name-casing": "error",
        "vue/require-default-prop": "error",
        "vue/require-explicit-emits": "error",
        "vue/require-prop-types": "error",
        "vue/v-on-style": "error",
        "vue/v-slot-style": [
          "error",
          {
            "atComponent": "v-slot",
            "default": "v-slot",
            "named": "longform"
          }
        ],

        "vue/component-api-style": "error",
        "vue/component-name-in-template-casing": "error",
        "vue/component-options-name-casing": "error",
        "vue/custom-event-name-casing": "error",
        "vue/html-comment-content-newline": "error",
        "vue/html-comment-content-spacing": "error",
        "vue/html-comment-indent": "error",
        "vue/match-component-import-name": "error",
        "vue/new-line-between-multi-line-property": "error",
        "vue/next-tick-style": "error",
        "vue/no-boolean-default": "error",
        "vue/no-deprecated-model-definition": "error",
        "vue/no-duplicate-attr-inheritance": "error",
        "vue/no-empty-component-block": "error",
        "vue/no-multiple-objects-in-class": "error",
        "vue/no-static-inline-styles": "error",
        "vue/no-template-target-blank": "error",
        "vue/no-this-in-before-route-enter": "error",
        "vue/no-unused-emit-declarations": "error",
        "vue/no-use-v-else-with-v-for": "error",
        "vue/no-useless-mustaches": "error",
        "vue/no-useless-v-bind": "error",
        "vue/no-v-text": "error",
        "vue/padding-line-between-blocks": "error",
        "vue/prefer-prop-type-boolean-first": "error",
        "vue/prefer-separate-static-class": "error",
        "vue/prefer-true-attribute-shorthand": "error",
        "vue/require-direct-export": "error",
        "vue/require-emit-validator": "error",
        "vue/require-expose": "error",
        "vue/require-macro-variable-name": "error",
        "vue/require-name-property": "error",
        "vue/require-typed-object-prop": "error",
        "vue/require-typed-ref": "error",
        "vue/v-for-delimiter-style": "error",
        "vue/v-on-handler-style": ["error", [
          "method", "inline"
        ]],
        "vue/no-ref-object-reactivity-loss": "error",
        "vue/define-props-declaration": "error",
        "vue/padding-lines-in-component-definition": "error",
        "vue/no-root-v-if": "error",
        "vue/prefer-define-options": "error",
        "vue/valid-define-options": "error",
        "vue/static-class-names-order": "error",

        "vue/camelcase": "error",
        "vue/dot-notation": "error",
        "vue/eqeqeq": "error",
        "vue/no-console": "error",
        "vue/no-constant-condition": "error",
        "vue/no-empty-pattern": "error",
        "vue/no-loss-of-precision": "error",
        "vue/no-sparse-arrays": "error",
        "vue/no-useless-concat": "error",
        "vue/object-shorthand": "error",
        "vue/prefer-template": "error",

        "vue/define-macros-order": [
          "error",
          {
            "order": [
              "defineOptions",
              "defineModel",
              "defineProps",
              "defineEmits",
              "defineSlots"
            ],
            "defineExposeLast": true
          }
        ],
        "vue/v-on-event-hyphenation": ["error", "never", { "autofix": true }],
        "vue/html-self-closing": ["error", { "html": { "void": "always" } }],
        "vue/match-component-file-name": [
          "error",
          {
            "extensions": ["*.vue", "*.js", "*.jsx", "*.ts", "*.tsx"],
            "shouldMatchCase": true
          }
        ],
        "vue/no-potential-component-option-typo": [
          "error",
          { "presets": ["all"] }
        ],
        "vue/no-irregular-whitespace": ["error", { "skipStrings": false }],
        "vue/no-required-prop-with-default": ["error", { "autofix": true }],
        "vue/attributes-order": ["error", { "alphabetical": true }],
        "vue/define-emits-declaration": ["error", "type-literal"],
        "vue/enforce-style-attribute": [
          "error",
          { "allow": ["scoped", "module"] }
        ],
        "vue/v-bind-style": [
          "error",
          "shorthand",
          { "sameNameShorthand": "always" }
        ],

        "import/no-unused-modules": "off",
        "import/no-anonymous-default-export": "off",
        "perfectionist/sort-objects": "off",
        "no-restricted-syntax": [
          "error",
          {
            "selector": "CallExpression[callee.name='defineEmits']",
            "message":
            "Pass event handlers as props with the \"on\" prefix instead"
          },
          {
            "selector": "CallExpression[callee.name=\"reactive\"]",
            "message": "use ref instead of reactive for code consistency"
          }
        ],
        "vue/block-lang": ["error", { "script": { "lang": "ts" } }],
        "vue/multi-word-component-names": "off"
      }
    },
    {
      "files": ["nuxt.config.{js,cjs,mjs,ts,cts,mts}"],
      "rules": {
        "no-undef": "off"
      }
    },
    {
      "files": ["*.vue"],

      "plugins": ["vue-scoped-css"],

      "rules": {
        "vue-scoped-css/no-deprecated-deep-combinator": "error",
        "vue-scoped-css/no-parent-of-v-global": "error",
        "vue-scoped-css/no-parsing-error": "error",
        "vue-scoped-css/no-unused-keyframes": "error",
        "vue-scoped-css/require-v-deep-argument": "error",
        "vue-scoped-css/require-v-global-argument": "error",
        "vue-scoped-css/require-v-slotted-argument": "error",
        "vue-scoped-css/no-deprecated-v-enter-v-leave-class": "error",
        "vue-scoped-css/require-selector-used-inside": "error",
        "vue-scoped-css/v-deep-pseudo-style": "error",
        "vue-scoped-css/v-global-pseudo-style": "error",
        "vue-scoped-css/v-slotted-pseudo-style": "error",

        "vue-scoped-css/enforce-style-type": [
          "error",
          { "allows": ["module"] }
        ],

        "import/no-anonymous-default-export": [
          "error",
          { "allowCallExpression": false, "allowObject": true }
        ],

        "no-undef": "off",
        "init-declarations": "off",
        "@typescript-eslint/init-declarations": "off",
        "import/unambiguous": "off",
        "vue/no-restricted-syntax": [
          "error",
          {
            "selector": "VDirectiveKey[argument.rawName=/^on.*/]",
            "message": "Use the @ (v-on) directive instead and pass the event handler without the \"on\" prefix"
          }
        ],
        "vuejs-accessibility/form-control-has-label": "off",
        "vuejs-accessibility/label-has-for": "off"
      }
    },
    {
      "files": ["**/composables/**/*.{js,ts}"],
      "rules": {
        "unicorn/consistent-function-scoping": "off"
      }
    },
    {
      "files": [
        "**/pages/**/*.{js,ts,vue}",
        "**/layouts/**/*.{js,ts,vue}",
        "**/app.{js,ts,vue}",
        "**/error.{js,ts,vue}"
      ]
    },
    {
      "files": ["server/**/*.{js,ts}"],
      "rules": {
        "no-param-reassign": [
          "error",
          {
            "props": true,
            "ignorePropertyModificationsFor": [
              "accumulator",
              "ctx",
              "context",
              "req",
              "request",
              "res",
              "response",
              "$scope",
              "staticContext",
              "event"
            ]
          }
        ]
      }
    }
  ]
}
